#include "symtable.h"

/////////////////////////////////////////////////////////////////
// Symbol
/////////////////////////////////////////////////////////////////

Symbol::Symbol(SymbolFlag flag, const std::wstring& name):
flag(flag),
name(name),
node(nullptr),
type(nullptr) { 
}

/////////////////////////////////////////////////////////////////
// SymTable
/////////////////////////////////////////////////////////////////
SymTable::SymTable(std::shared_ptr<SymTable> previous):
previous(previous) {
}

void SymTable::insert(Symbol::Pointer symbol) {
    
}



/////////////////////////////////////////////////////////////////
// SymbolFactory
/////////////////////////////////////////////////////////////////

SymbolFactory::SymbolFactory() {
}

SymTable::Pointer SymbolFactory::createSymTable(NodePtr node) {
    return std::make_shared<SymTable>(nullptr);
}
