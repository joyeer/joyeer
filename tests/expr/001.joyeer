print(message: 1000)
print(message: 100)

let maximumNumberOfLoginAttempts = 10
var currentLoginAttempt = 0

print(message: maximumNumberOfLoginAttempts)
print(message: currentLoginAttempt)

let b = 11
var a = 13

print(message: a)
a = b 
print(message: a)

a = 24 / 2 - 23 % 2 * 2 - 14 + 4 * 4 - 14 / 3
print(message: a)

a = 24 / (8 - 2) + 300 / (24 * (3 + 2))
print(message: a)

a = true
if a {
    print(message: a)
} else {
    print(message: 10)
}

print(message: 100)

func add(left:Int, right: Int): Int {
    var i = left + right
    return i
}

a = add(left:10, right:12)
print(message: a)

class ListNode {
	var previous: ListNode?
	var next: ListNode?
	var value: Any

	init(previous: ListNode?, next: ListNode?, value: Any)  {
		self.previous = previous
		self.next = next
		self.value = value
	}
}

let root = ListNode(previous: nil, next: nil, value: 10)

class List {
	var root: ListNode? = nil
	var cur: ListNode? = nil

	func append(node: ListNode) {
		if root == nil {
			root = node
			cur = root
		} else {
			cur.next = node
			cur = node
		}
	}
}

var list = List()
list.append(root)
