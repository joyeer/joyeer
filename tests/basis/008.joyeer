
func partitionSort(array:[Int], start:Int, end:Int) {
    var startIndex = start
    var endIndex = end

    if startIndex < endIndex {
        var num = array[(start + end) / 2]

        while startIndex < endIndex {
            while array[startIndex] < num {
                startIndex = startIndex + 1
            }

            while array[endIndex] > num {
                endIndex = endIndex - 1
            }

            if startIndex < endIndex {
                var temp:Int = array[startIndex]
                array[startIndex] = array[endIndex]
                array[endIndex] = temp
            }
            startIndex = startIndex + 1
            endIndex = endIndex - 1
        }
        partitionSort(array: array, start: start, end: endIndex )
        partitionSort(array: array, start: startIndex, end: end)
    }
}

func quickSort(array:[Int]): [Int] {
    var startIndex = 0
    var endIndex = array.size() - 1
    partitionSort(array: array, start: startIndex, end: endIndex)
    return array
}

var result = quickSort(array: [8, 6, 1, 2, 1, 12, 3, 4, 34])
print(message: result)
